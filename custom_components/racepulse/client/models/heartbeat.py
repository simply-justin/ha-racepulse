from dataclasses import dataclass
from datetime import datetime
from typing import Final
from ..enums import LiveTimingEvent
from ..interfaces import Event
from ..decorators import register_event


@register_event(LiveTimingEvent.HEARTBEAT)
@dataclass(frozen=True)
class Heartbeat(Event):
    """
    Represents a heartbeat signal emitted by the Formula 1 Live Timing service.

    This event is sent at regular intervals to confirm that the live timing
    connection is active and synchronized. It includes the UTC timestamp
    corresponding to when the heartbeat was generated by the server.

    Example of raw event payload:
        {
            "Utc": "2025-10-03T14:26:58.0863771Z",
            "_kf": true
        }

    Attributes:
        data_type: A constant identifying this event as a `HEARTBEAT` event.
        datetime_utc: The UTC timestamp indicating when the heartbeat occurred.

    Source:
        SignalR event: "Heartbeat"
    """

    data_type: Final[LiveTimingEvent] = LiveTimingEvent.HEARTBEAT
    datetime_utc: datetime
